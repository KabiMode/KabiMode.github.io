[{"/Users/Kirby/Desktop/Projects/Website/github-pages/src/index.js":"1","/Users/Kirby/Desktop/Projects/Website/github-pages/src/App.js":"2","/Users/Kirby/Desktop/Projects/Website/github-pages/src/reportWebVitals.js":"3","/Users/Kirby/Desktop/Projects/Website/github-pages/src/Watercolor.js":"4","/Users/Kirby/Desktop/Projects/Website/github-pages/src/Project.js":"5","/Users/Kirby/Desktop/Projects/Website/github-pages/src/About.js":"6","/Users/Kirby/Desktop/Projects/Website/github-pages/src/ScrollToTop.js":"7"},{"size":612,"mtime":1645969513734,"results":"8","hashOfConfig":"9"},{"size":10092,"mtime":1645969512784,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1645969513736,"results":"11","hashOfConfig":"9"},{"size":7732,"mtime":1645969512788,"results":"12","hashOfConfig":"9"},{"size":20245,"mtime":1645969512786,"results":"13","hashOfConfig":"9"},{"size":3140,"mtime":1645969512781,"results":"14","hashOfConfig":"9"},{"size":245,"mtime":1645969512787,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ovaxh",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Kirby/Desktop/Projects/Website/github-pages/src/index.js",[],["32","33"],"/Users/Kirby/Desktop/Projects/Website/github-pages/src/App.js",[],"/Users/Kirby/Desktop/Projects/Website/github-pages/src/reportWebVitals.js",[],"/Users/Kirby/Desktop/Projects/Website/github-pages/src/Watercolor.js",[],"/Users/Kirby/Desktop/Projects/Website/github-pages/src/Project.js",["34","35"],"import React from 'react';\nimport {\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\nimport ReactMarkdown from 'react-markdown'\nimport { motion } from 'framer-motion'\n\n\nconst projectVariants = {\n    enterRight: {\n        x: \"150vw\"\n    },\n    enterUp: {\n        y: \"100%\"\n    },\n    enterDown: {\n        y: \"-300vh\",\n        opacity: 0\n    },\n    view: {\n        x: 0,\n        y: 0,\n        opacity: 1,\n        transition:{\n            type: \"tween\",\n            delay: .2,\n            duration: 1\n        }\n    },\n    exitRight: {\n        x: \"150vw\",\n        transition:{\n            type: \"tween\",\n            delay: .2,\n            duration: 1\n        }\n    },\n    exitUp: {\n        y: \"-100%\",\n        transition:{\n            type: \"tween\",\n            delay: .2,\n            duration: 1\n        }\n    },\n    exitDown: {\n        y: \"300vh\",\n        opacity: [1,0,0],\n        transition:{\n            type: \"tween\",\n            delay: 0,\n            duration: 1.2\n        }\n    }\n}\n\n\nconst coloredStrongRenderer = { //somewhat janky way to pass a color value in a markdown strong tag using two escaped asterixes as a delimiter for the color and content values\n    strong: (props) => {\n        if (props.children[0]) {\n            const splitText = props.children[0].props.children.split(\"**\")\n            if (splitText.length > 1) {\n                return(\n                    <strong style={{color: splitText.shift()}}>{splitText.join(\"\")}</strong>\n                )\n            } else {\n                return(\n                    <strong>{props.children}</strong>\n                )\n            }\n        } else {\n            return(\n                <strong>{props.children}</strong>\n            )\n        }\n    }\n}\n\nclass ProjectPage extends React.Component { //whole page containing a project\n    constructor(props) {\n        super(props);\n        this.state = {scrolled: false,\n                        content: {\"children\": []},\n                        isLoaded: false,\n                        imagesLoaded: false,\n                        style: document.createElement('style'),\n                        homepage: \"index.json\",\n                        pageOrder: [{\"title\": \"Home\", \"url\": \"/\"}]\n                    };\n    }\n\n    componentDidMount() {\n        this.imgCount = this.imgLoadCount = 0;\n        fetch(\"/projects.json\") //stolen code begins\n        .then(res => res.json())\n        .then(\n          (result) => {\n                //console.log(this.props.slug);\n                this.setState({\n                  isLoaded: true,\n                  content: result.projects.find(p => p.slug === this.props.slug)\n              });\n                setTimeout(() => { // TODO: make this actually check on images\n                    this.setState({\n                      imagesLoaded: true,\n                    });\n                }, 2000)\n                if (this.state.content.popColor !== undefined || this.state.content.strongBold !== undefined) { //dynamic color and font weight for strong tags\n                    var tempStyle = this.state.style\n                    tempStyle.innerHTML =\n                    \t'.project-page strong {' +\n                    \t\t'font-weight: ' + ((this.state.content.strongBold === true) ? 'bold' : 'inherit') + ';' +\n                    \t\t'color: ' + this.state.content.popColor + ';' +\n                    \t'}';\n                    this.setState({\n                        style: tempStyle\n                    });\n                        // Insert our new styles at the end of head\n                        document.getElementsByTagName('head')[0].appendChild(this.state.style)\n                }\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            console.log(error);\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n      ) //stolen code ends\n      fetch(this.state.homepage) //stolen code begins\n      .then(res => res.json())\n      .then(\n        (result) => {\n            result.sections.map(child => {\n                child.slides.map(grandchild => {\n                    this.state.pageOrder.push(grandchild)\n                })\n            })\n            this.state.pageOrder.push({\"title\": \"Rose!\", \"url\": \"/about\"})\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(error);\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n    )\n      //set popColor (strong color)\n    }\n\n    componentWillUnmount() {\n        this.state.style.remove()\n    }\n    render() {\n        if (!this.state.content){\n            console.log(\"page has no data\");\n            return(\n                <Redirect to=\"/\" />\n            );\n        }\n        var enterAnimation\n        var exitAnimation\n        switch((this.props.location.state !== undefined) ? this.props.location.state.from : undefined) {\n            case \"project\":\n                enterAnimation = \"enterUp\"\n                break;\n            case \"projectBelow\":\n                enterAnimation = \"enterDown\"\n            break;\n            case \"projectAbove\":\n                enterAnimation = \"enterUp\"\n                break;\n            case \"watercolor\":\n                enterAnimation = \"enterRight\"\n                break;\n            default:\n                enterAnimation = \"enterUp\"\n                break;\n        }\n        switch((this.props.history.location.state !== undefined) ? this.props.history.location.state.to : undefined) {\n            case \"project\":\n                exitAnimation = \"exitUp\"\n                break;\n            case \"projectAbove\":\n                exitAnimation = \"exitDown\"\n            break;\n            case \"projectBelow\":\n                exitAnimation = \"exitUp\"\n                break;\n            case \"watercolor\":\n                exitAnimation = \"exitRight\"\n                break;\n            default:\n                exitAnimation = \"exitUp\"\n                break;\n        }\n        return(\n            <div className=\"project-page\">\n                <motion.div\n                variants={projectVariants}\n                initial={enterAnimation}\n                animate=\"view\"\n                exit={exitAnimation}\n                >\n                    {this.state.content.children.map((child, index) => (\n                        componentLookup(child.component, child.props)\n                    ))}\n                    <ProjectFooter slug={this.props.slug} pageOrder={this.state.pageOrder}  />\n                </motion.div>\n            </div>\n        );\n    }\n}\n\nfunction componentLookup(name, props = {}) {\n  switch(name) {\n    case 'ProjectFullImage': return <ProjectFullImage props={props} />;\n    case 'ProjectTitle': return <ProjectTitle props={props} />;\n    case 'ProjectHeading': return <ProjectHeading props={props} />;\n    case 'ProjectImageByText': return <ProjectImageByText props={props} />;\n    case 'ProjectImageByImage': return <ProjectImageByImage props={props} />;\n    case 'ProjectColumns': return <ProjectColumns props={props} />;\n    case 'ProjectCycleThree': return <ProjectCycleThree props={props} />;\n    case 'ProjectImageCaptioned': return <ProjectImageCaptioned props={props} />;\n    case 'ProjectImageGallery': return <ProjectImageGallery props={props} />;\n    default: return <ProjectTitle props={props} />;\n  }\n}\n//<WatercolorSection element={child} />\n//<FullImage src={this.state.content.children[0].src} alt={this.state.content.children[0].alt} />\n\nfunction ProjectFullImage(props){ //try to fill page, but if not, its all good\n    return(\n        <div className={\"project-full-image\".concat(props.props.isTitle ? \" title\" : \"\").concat(props.props.bleed !== undefined ? \" \" + props.props.bleed : \"\")} style={((props.props.imageMaxWidth !== undefined) ? {maxWidth: props.props.imageMaxWidth} : {})}>\n\n                <img src={props.props.src} alt={props.props.alt} style={((props.props.imageWidth !== undefined) ? {width: props.props.imageWidth} : {})} className={(props.props.pageImage ? \"page-image\" : \"\")} />\n\n            {props.props.ribbons ? <ReactMarkdown className=\"project-full-image-ribbons\" linkTarget=\"_blank\" children={props.props.ribbons} /> : null}\n        </div>\n    );\n}\nfunction ProjectTitle(props){\n    return(\n        <ReactMarkdown className=\"project-heading\" children={props.props.value} />\n    );\n}\nfunction ProjectHeading(props){\n    return(\n        <ReactMarkdown className={\"project-heading\".concat(props.props.unfinished ? \" unfinished\" : \"\")} children={props.props.value} />\n    );\n}\nfunction ProjectImageByText(props){\n    return(\n        <div className={\"project-image-by-text\".concat(props.props.unfinished ? \" unfinished\" : \"\")}>\n            {(props.props.imageSide === \"left\")\n                ? <div className={\"project-image-by-text-image left\".concat(props.props.bleed ? \" bleed\" : \"\")} style={((props.props.imageWidth !== undefined) ? {flexBasis: props.props.imageWidth} : {})}>\n                    <img src={props.props.src} alt={props.props.alt} className={(props.props.pageImage ? \"page-image\" : \"\")} />\n                  </div>\n                : null\n            }\n            <ReactMarkdown className={\"project-image-by-text-text\".concat(props.props.details === false ? \"\" : \" details\").concat(props.props.smallText ? \" small-text\" : \"\")} children={props.props.value} />\n            {(props.props.imageSide === undefined || props.props.imageSide === \"right\")\n                ? <div className={\"project-image-by-text-image right\".concat(props.props.bleed ? \" bleed\" : \"\")} style={((props.props.imageWidth !== undefined) ? {flexBasis: props.props.imageWidth} : {})}>\n                    <img src={props.props.src} alt={props.props.alt} className={(props.props.pageImage ? \"page-image\" : \"\")} />\n                  </div>\n                : null\n            }\n        </div>\n    );\n}\nfunction ProjectImageByImage(props){\n    return(\n        <div className={\"project-image-by-image\".concat(props.props.unfinished ? \" unfinished\" : \"\")}>\n            <div>\n                <img src={props.props.src1} alt={props.props.alt1} className={(props.props.pageImage1 ? \"page-image\" : \"\")} />\n            </div>\n            <div>\n                <img src={props.props.src2} alt={props.props.alt2} className={(props.props.pageImage2 ? \"page-image\" : \"\")} />\n            </div>\n        </div>\n    );\n}\nfunction ProjectColumns(props){\n    return(\n        <div className={\"project-columns\".concat(props.props.unfinished ? \" unfinished\" : \"\")}>\n            <ReactMarkdown className=\"project-columns-heading\" children={props.props.value} />\n            <div className=\"project-columns-columns\">\n                {props.props.columns.map((column, index) => (\n                    ((column.src !== undefined)\n                    ? <div className=\"project-columns-column\">\n                        <img src={column.src} alt={column.alt} style={((column.opacity !== undefined) ? {opacity: column.opacity} : {})} />\n                      </div>\n                    : null)\n                ))}\n            </div>\n            <div className=\"project-columns-columns\">\n                {props.props.columns.map((column, index) => (\n                    <ReactMarkdown className=\"project-columns-column\" renderers={coloredStrongRenderer} children={column.value} />\n                ))}\n            </div>\n        </div>\n    );\n}\nfunction ProjectCycleThree(props){ //try to fill page, but if not, its all good\n    return(\n        <div className=\"project-cycle-three\">\n            <img className=\"project-cycle-arrow\" src=\"/images/osmo/circle-arrow.png\" alt=\"\" />\n            <img className=\"project-cycle-arrow\" src=\"/images/osmo/circle-arrow.png\" alt=\"\" style={{transform: \"rotate(130deg)\"}} />\n            <img className=\"project-cycle-arrow\" src=\"/images/osmo/circle-arrow.png\" alt=\"\" style={{transform: \"rotate(230deg)\"}} />\n            <div className=\"project-cycle-stage\">\n                <img src={props.props.stages[0].src} alt={props.props.stages[0].alt} />\n                <ReactMarkdown className=\"big-details\" children={props.props.stages[0].value} />\n            </div>\n            <div className=\"project-cycle-stage\">\n                <img src={props.props.stages[2].src} alt={props.props.stages[2].alt} />\n                <ReactMarkdown className=\"big-details\" children={props.props.stages[2].value} />\n            </div>\n            <div className=\"project-cycle-stage\">\n                <img src={props.props.stages[1].src} alt={props.props.stages[1].alt} />\n                <ReactMarkdown className=\"big-details\" children={props.props.stages[1].value} />\n            </div>\n        </div>\n    );\n}\nfunction ProjectImageCaptioned(props){\n    return(\n        <div className={\"project-image-captioned\".concat(props.props.unfinished ? \" unfinished\" : \"\")}>\n            <img src={props.props.src} alt={props.props.alt} style={((props.props.imageWidth !== undefined) ? {width: props.props.imageWidth} : {})} className={(props.props.pageImage ? \"page-image\" : \"\").concat(props.props.isTitle ? \" title\" : \"\")} />\n            <div className={\"project-image-captioned-caption\"} >\n                <h2 className=\"project-image-captioned-title\">{props.props.titleValue}</h2><span className=\"project-image-captioned-details\">{props.props.detailsValue}</span>\n            </div>\n        </div>\n    );\n}\n\nclass ProjectImageGallery extends React.Component {\n    constructor(props) {\n        super(props);\n        this.slider = React.createRef();\n    }\n    render() {\n        var sliderWidth = -(this.slider.current !== null ? this.slider.current.clientWidth - this.slider.current.parentElement.clientWidth + parseFloat(window.getComputedStyle(this.slider.current).marginLeft)*2 + parseFloat(window.getComputedStyle(this.slider.current).marginRight)*2 : 1);\n        sliderWidth = (this.slider.current !== null ? (this.slider.current.clientWidth < this.slider.current.parentElement.clientWidth ? 1 : sliderWidth) : sliderWidth)\n        return(\n            <div className={\"project-image-gallery\".concat(this.props.props.unfinished ? \" unfinished\" : \"\")}>\n\n                <motion.div className=\"project-image-gallery-gallery\"\n                    style={{\n                        transform: \"translateZ(0)\",\n                        cursor: \"grab\",\n                    }}\n                    whileTap={{ cursor: \"grabbing\" }}\n                >\n                    <motion.div className=\"project-image-gallery-slider\"\n                        drag=\"x\"\n                        dragPropagation\n                        dragConstraints={{\n                            left: sliderWidth,\n                            right: 0,\n                        }}\n                        ref={this.slider}\n                    >\n                            {this.props.props.images.map((image, index) => (\n                                <img src={image.src} alt={image.alt} className={(image.pageImage ? \"page-image\" : \"\")} />\n                            ))}\n                    </motion.div>\n                </motion.div>\n                <div className={\"project-image-gallery-caption\"} >\n                    <h2 className=\"project-image-captioned-title\">{this.props.props.titleValue}</h2><span className=\"project-image-captioned-details\">{this.props.props.detailsValue}</span>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst footerVariants = {\n    initial: { },\n    hover: { }\n}\nconst footerArrowVariants = {\n    initial: {\n        x: 0,\n        y: 0,\n        opacity: 1\n    },\n    hover: {\n        originX: 0,\n        originY: 1,\n        scale: 3,\n        x: 0,\n        y: 0,\n        opacity: .1,\n        transition:{\n            type: \"tween\",\n            duration: .5\n        }\n    }\n}\n\nfunction ProjectFooter(props){\n    return( //from: \"projectBelow\", to: (((props.pageOrder[props.pageOrder.findIndex(p => p.url === props.slug)-1] !== undefined) ? props.pageOrder[props.pageOrder.findIndex(p => p.url === props.slug)-1].url : null) === \"/\" ? \"watercolor\" : \"projectAbove\")\n        <div className=\"project-footer\">\n            <div className=\"project-footer-big\">\n                <Link className=\"project-footer-link project-footer-link-prev\" to={{\n\n                    pathname: ((props.pageOrder[props.pageOrder.findIndex(p => p.url === props.slug)-1] !== undefined) ? props.pageOrder[props.pageOrder.findIndex(p => p.url === props.slug)-1].url : null),\n                    state: { from: \"projectBelow\", to: (props.pageOrder.findIndex(p => p.url === props.slug) <= 1 ? \"watercolor\" : \"projectAbove\") }\n                }}>\n                    <motion.div\n                    variants={footerVariants}\n                    whileHover=\"hover\"\n                    >\n                        <h3>Previous:</h3>\n                        <h2>\n                            {((props.pageOrder[props.pageOrder.findIndex(p => p.url === props.slug)-1] !== undefined) ? props.pageOrder[props.pageOrder.findIndex(p => p.url === props.slug)-1].title : null)}\n                        </h2>\n                        {(props.pageOrder.findIndex(p => p.url === props.slug) <= 1 &&\n                            <motion.img\n                            src=\"/images/left-arrow.svg\"\n                            alt=\"\"\n                            className=\"\"\n                            variants={footerArrowVariants}\n                            />\n                        )}\n                        {(props.pageOrder.findIndex(p => p.url === props.slug) > 1 &&\n                            <motion.img\n                            src=\"/images/up-arrow.svg\"\n                            alt=\"\"\n                            className=\"\"\n                            variants={footerArrowVariants}\n                            />\n                        )}\n                    </motion.div>\n                </Link>\n                {(\n                    props.pageOrder.findIndex(p => p.url === props.slug)+1 < props.pageOrder.length &&\n                    <Link className=\"project-footer-link project-footer-link-next\" to={{\n                        pathname: ((props.pageOrder[props.pageOrder.findIndex(p => p.url === props.slug)+1] !== undefined) ? props.pageOrder[props.pageOrder.findIndex(p => p.url === props.slug)+1].url : null),\n                        state: { from: \"projectAbove\", to: \"projectBelow\" }\n                    }}>\n                        <motion.div\n                        variants={footerVariants}\n                        whileHover=\"hover\"\n                        >\n                            <h2>Next:</h2>\n                            <h1>\n                            {((props.pageOrder[props.pageOrder.findIndex(p => p.url === props.slug)+1] !== undefined) ? props.pageOrder[props.pageOrder.findIndex(p => p.url === props.slug)+1].title : null)}\n                            </h1>\n                            <motion.img\n                             src=\"/images/down-arrow.svg\"\n                             alt=\"\"\n                             className=\"\"\n                             variants={footerArrowVariants}\n                            />\n                        </motion.div>\n                    </Link>\n                )}\n            </div>\n            <div className=\"project-footer-little\">\n                <Link className=\"watercolor-follower-link\"\n                to={{\n                    pathname: \"/about\",\n                    state: { from: \"project\", to: \"project\" }\n                }}>About</Link>\n                <br />\n                <span>© Rose Kirby | 2022</span><br/><br/>\n                <Link className=\"watercolor-follower-link\"\n                to={{\n                    pathname: \"/\",\n                    state: { from: \"project\", to: \"watercolor\" }\n                }}>Home</Link>\n                <a href=\"mailto:rose@rosekir.by?subject=Hey%20Rose!\" target=\"_blank\" rel=\"noreferrer\">Contact</a>\n            </div>\n        </div>\n    );\n}\n\n\nexport default withRouter(ProjectPage);\n","/Users/Kirby/Desktop/Projects/Website/github-pages/src/About.js",[],"/Users/Kirby/Desktop/Projects/Website/github-pages/src/ScrollToTop.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":139,"column":39,"nodeType":"42","messageId":"43","endLine":139,"endColumn":41},{"ruleId":"40","severity":1,"message":"41","line":140,"column":45,"nodeType":"42","messageId":"43","endLine":140,"endColumn":47},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]